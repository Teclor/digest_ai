import json
from kafka import KafkaConsumer, KafkaAdminClient

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BOOTSTRAP_SERVERS = "kafka:9092"


def choose_topic(all_topics):
    print("\n–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–ø–∏–∫–∏ (—á–∞—Ç—ã):")
    for i, topic in enumerate([topic for topic in all_topics if topic != '__consumer_offsets'], 1):
        print(f"{i}. {topic}")
    choice = int(input("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–æ–ø–∏–∫–∞: "))
    return all_topics[choice]


def choose_limit():
    return int(input("–°–∫–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤—ã–≤–µ—Å—Ç–∏? "))


def main():
    MAX_MESSAGES_TO_READ = 1000
    POLL_TIMEOUT_MS = 1000  # –ñ–¥–∞—Ç—å –º–∞–∫—Å–∏–º—É–º 1 —Å–µ–∫—É–Ω–¥—É –Ω–∞ –∫–∞–∂–¥–æ–º poll

    # –°–æ–∑–¥–∞—ë–º AdminClient –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç–æ–ø–∏–∫–æ–≤
    admin_client = KafkaAdminClient(
        bootstrap_servers=BOOTSTRAP_SERVERS,
        client_id='topic_list_reader'
    )

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–ø–∏–∫–æ–≤
    all_topics = admin_client.list_topics()
    admin_client.close()

    if not all_topics:
        print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–ø–∏–∫–æ–≤ –≤ Kafka.")
        return

    selected_topic = choose_topic(sorted(all_topics))
    limit = choose_limit()

    print(f"\n–ß—Ç–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ —Ç–æ–ø–∏–∫–∞ '{selected_topic}'...\n")

    # –°–æ–∑–¥–∞—ë–º consumer –ø–æ–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–æ–ø–∏–∫
    consumer = KafkaConsumer(
        selected_topic,
        bootstrap_servers=BOOTSTRAP_SERVERS,
        auto_offset_reset='earliest',
        enable_auto_commit=False,
        group_id=None,

        fetch_max_bytes=52428800,
        max_partition_fetch_bytes=10485760,
        max_poll_records=500,

        value_deserializer=lambda m: json.loads(m.decode('utf-8'))
    )

    all_messages = []

    try:
        while len(all_messages) < MAX_MESSAGES_TO_READ:
            records = consumer.poll(timeout_ms=POLL_TIMEOUT_MS)

            if not records:
                print("üì¶ –ë–æ–ª—å—à–µ –Ω–µ—Ç –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.")
                break

            for topic_partition, messages in records.items():
                for message in messages:
                    all_messages.append(message.value)

                    if len(all_messages) >= MAX_MESSAGES_TO_READ:
                        print(f"‚ö†Ô∏è –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –≤ {MAX_MESSAGES_TO_READ} —Å–æ–æ–±—â–µ–Ω–∏–π")
                        break
                if len(all_messages) >= MAX_MESSAGES_TO_READ:
                    break

    finally:
        consumer.close()

    if not all_messages:
        print("‚ùå –í –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ç–æ–ø–∏–∫–µ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π.")
        return

    print(f"\n–ü–æ—Å–ª–µ–¥–Ω–∏–µ {min(limit, len(all_messages))} —Å–æ–æ–±—â–µ–Ω–∏–π:\n")
    for msg in all_messages[-limit:]:
        print(json.dumps(msg, indent=2, ensure_ascii=False))
        print("-" * 60)


if __name__ == "__main__":
    main()